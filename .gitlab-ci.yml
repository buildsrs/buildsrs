stages:
  - build
  - publish

default:
  interruptible: true
  timeout: 10 minutes
  retry: 1

test:
  stage: build
  image: rust:1.73-bookworm
  services:
    - name: postgres:15
      variables:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: password
  variables:
    DATABASE: "host=postgres user=postgres password=password"
  before_script:
    - apt update
    - apt install -y cmake
    - cargo run -p buildsrs-database --features tools -- migrate
  script:
    - cargo test -p buildsrs-database --all-features
    - cargo test -p buildsrs-backend --all-features
    - cargo test -p buildsrs-builder --all-features
    - cargo test -p buildsrs-common --all-features
    - cargo test -p buildsrs-protocol --all-features
    - cargo test -p buildsrs-registry-sync --all-features

backend:
  stage: build
  image: docker
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build . -f backend/Dockerfile -t $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_REF_SLUG
    - docker push "$CI_REGISTRY_IMAGE/backend:$CI_COMMIT_REF_SLUG"

migrate:
  stage: build
  image: docker
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build . -f database/Dockerfile -t $CI_REGISTRY_IMAGE/migrate:$CI_COMMIT_REF_SLUG
    - docker push "$CI_REGISTRY_IMAGE/migrate:$CI_COMMIT_REF_SLUG"

builder:
  stage: build
  image: docker
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build . -f builder/Dockerfile -t $CI_REGISTRY_IMAGE/builder:$CI_COMMIT_REF_SLUG
    - docker push "$CI_REGISTRY_IMAGE/builder:$CI_COMMIT_REF_SLUG"

registry-sync:
  stage: build
  image: docker
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build . -f backend/Dockerfile -t $CI_REGISTRY_IMAGE/registry-sync:$CI_COMMIT_REF_SLUG
    - docker push "$CI_REGISTRY_IMAGE/registry-sync:$CI_COMMIT_REF_SLUG"

frontend:
  stage: build
  image: rust:1.73-bookworm
  variables:
    TRUNK_VERSION: 0.17.5
  before_script:
    - rustup target add wasm32-unknown-unknown
    - wget -qO- https://github.com/thedodd/trunk/releases/download/v${TRUNK_VERSION}/trunk-x86_64-unknown-linux-gnu.tar.gz | tar -xzf- -C /usr/local/bin
  script:
    - cd frontend && trunk build --release
  artifacts:
    paths:
      - frontend/dist

book:
  stage: build
  image: alpine
  before_script:
    - apk add mdbook
  script:
    - mdbook build
  artifacts:
    paths:
      - target/book

deploy:
  stage: publish
  image: docker
  variables:
    DOCKER_HOST: ssh://$DEPLOY_HOST
  before_script:
    - mkdir ~/.ssh
    - mv $DEPLOY_KEY ~/.ssh/id_ed25519
    - mv $DEPLOY_HOST_KEY ~/.ssh/known_hosts
    - chmod 0600 ~/.ssh/id_ed25519
  script:
    - docker stack config -c stack.yml | docker stack deploy "buildsrs-$CI_COMMIT_REF_SLUG" --compose-file - --with-registry-auth
  only:
    - main
    - prod

pages:
  stage: publish
  image: alpine
  script:
    - md target/book public
  artifacts:
    paths:
      - public
  only:
    - main
