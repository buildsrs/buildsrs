[workspace]
resolver = "2"
members = [
    "backend",
    "builder",
    "common",
    "database",
    "frontend",
    "protocol",
    "registry-sync",
    "storage",
]

[workspace.dependencies]
anyhow = "1.0.75"
async-trait = "0.1.74"
buildsrs-common = { path = "common" }
buildsrs-database = { path = "database" }
buildsrs-protocol = { path = "protocol" }
buildsrs-storage = { path = "storage" }
bytes = "1.5.0"
clap = { version = "4.4.7" }
futures = "0.3.29"
proptest = "1.3.1"
serde = "1.0.190"
serde_json = "1.0.108"
test-strategy = "0.3.1"
thiserror = "1.0.50"
tokio = { version = "1.33.0" }
tracing = "0.1.40"
tracing-subscriber = "0.3.17"
url = "2.4.1"
uuid = "1.5.0"
ssh-key = "0.6.2"
rand_core = "0.6.4"
strum = { version = "0.26.1", features = ["derive"] }

[workspace.package]
license = "MIT"
version = "0.1.0"
authors = [
    "Patrick Elsen <pelsen@xfbs.net>",
]

[workspace.lints.rust]
missing_docs = "warn"
missing_copy_implementations = "warn"

[workspace.lints.rustdoc]
unescaped_backticks = "warn"

[workspace.lints.clippy]
bool_to_int_with_if = "warn"
borrow_as_ptr = "warn"
case_sensitive_file_extension_comparisons = "warn"
cast_lossless = "warn"
cast_possible_truncation = "warn"
cast_possible_wrap = "warn"
cast_precision_loss = "warn"
cast_ptr_alignment = "warn"
cast_sign_loss = "warn"
checked_conversions = "warn"
cloned_instead_of_copied = "warn"
copy_iterator = "warn"
doc_link_with_quotes = "warn"
doc_markdown = "warn"
empty_enum = "warn"
enum_glob_use = "warn"
expl_impl_clone_on_copy = "warn"
explicit_deref_methods = "warn"
explicit_into_iter_loop = "warn"
explicit_iter_loop = "warn"
filter_map_next = "warn"
flat_map_option = "warn"
float_cmp = "warn"
fn_params_excessive_bools = "warn"
from_iter_instead_of_collect = "warn"
if_not_else = "warn"
ignored_unit_patterns = "warn"
implicit_clone = "warn"
implicit_hasher = "warn"
inconsistent_struct_constructor = "warn"
index_refutable_slice = "warn"
inefficient_to_string = "warn"
inline_always = "warn"
invalid_upcast_comparisons = "warn"
items_after_statements = "warn"
iter_not_returning_iterator = "warn"
large_digit_groups = "warn"
large_futures = "warn"
large_stack_arrays = "warn"
large_types_passed_by_value = "warn"
linkedlist = "warn"
macro_use_imports = "warn"
manual_assert = "warn"
manual_instant_elapsed = "warn"
manual_let_else = "warn"
manual_ok_or = "warn"
manual_string_new = "warn"
many_single_char_names = "warn"
map_unwrap_or = "warn"
match_bool = "warn"
match_on_vec_items = "warn"
match_same_arms = "warn"
match_wild_err_arm = "warn"
match_wildcard_for_single_variants = "warn"
maybe_infinite_iter = "warn"
mismatching_type_param_order = "warn"
missing_fields_in_debug = "warn"
#missing_panics_doc = "warn"
mut_mut = "warn"
naive_bytecount = "warn"
needless_bitwise_bool = "warn"
needless_continue = "warn"
needless_for_each = "warn"
needless_pass_by_value = "warn"
needless_raw_string_hashes = "warn"
no_effect_underscore_binding = "warn"
no_mangle_with_rust_abi = "warn"
option_option = "warn"
ptr_as_ptr = "warn"
ptr_cast_constness = "warn"
range_minus_one = "warn"
range_plus_one = "warn"
redundant_else = "warn"
ref_binding_to_reference = "warn"
ref_option_ref = "warn"
return_self_not_must_use = "warn"
same_functions_in_if_condition = "warn"
semicolon_if_nothing_returned = "warn"
should_panic_without_expect = "warn"
similar_names = "warn"
single_match_else = "warn"
stable_sort_primitive = "warn"
string_add_assign = "warn"
struct_excessive_bools = "warn"
too_many_lines = "warn"
transmute_ptr_to_ptr = "warn"
trivially_copy_pass_by_ref = "warn"
unchecked_duration_subtraction = "warn"
unicode_not_nfc = "warn"
uninlined_format_args = "warn"
unnecessary_box_returns = "warn"
unnecessary_join = "warn"
unnecessary_wraps = "warn"
unnested_or_patterns = "warn"
unreadable_literal = "warn"
unsafe_derive_deserialize = "warn"
unused_self = "warn"
used_underscore_binding = "warn"
verbose_bit_mask = "warn"
zero_sized_map_values = "warn"
